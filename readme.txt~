	2016华为codecraft成渝赛区32强复赛已经结束，本人虽然与最后的总决赛无缘，但是在本次比赛过程中学到了很多东西。本着分享与开源的精神，在这里跟大家分享在本次复赛的算法思想以及代码的实现。
	复赛	题目的描述位于本目录下，针对本次复赛题目，本人实现了两种解决方法:贪婪算法和蚁群算法。由于采取的小组内对战的方式以及大部分队伍只解出了官方用例的前三个。因此，在对战过程中，在假设双方队伍均解不出对方设计的图的情况下，取胜的关键就在于谁求出的官方前三个用例的解更优。这也就是在本次比赛现场，本人决定放弃蚁群，而选择贪婪算法的原因。但是由于比赛准备期间，本人一直把精力集中于蚁群算法的优化，对于贪婪算法并没有做过多的优化，只是简单的用dij进行处理。本次复赛，我相信很多队伍都是都是将原图通过增加一些点边组成新图后，在新图中寻找最优TSP环游来处理，再加上lkh这样的局部优化算法，经过这样的处理，求出的解的质量都非常好。本人在赛前一天打算将这个思想和我的蚁群算法结合起来，但是时间太仓促，写出来的代码质量差，对于大图求解时间过长，不得不放弃。
	贪婪算法和蚁群算法的实现位于greedyVersion和acoVersion目录下，编译相关情况请查看各自目录下的readMe文件。算法的实现位于future_net目录下。first-run目录下为初赛的相关用例，second-run为复赛相关用例，mycase为复赛民间相关案例。
	最后对我们的队伍介绍一下，我们是matlab是宇宙最好的语言战队。如果你对我们的算法感兴趣或者有什么疑问，可以跟我们的联系.
